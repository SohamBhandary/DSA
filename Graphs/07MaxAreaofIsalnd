class Solution {
    public int maxAreaOfIsland(int[][] grid) {
    int rows=grid.length;
    int cols=grid[0].length;
    boolean [][] visited = new boolean[rows][cols];
    int maxIsland=0;
    for(int i =0;i<rows;i++){
        for(int j=0;j<cols;j++){
            if(grid[i][j]==1 && !visited[i][j]){
                maxIsland= Math.max(maxIsland, dfs(grid,visited,i,j));  
              }
        }
    }
    return maxIsland;        
    }

    private int dfs(int[][]grid, boolean [][]vis,int i ,int j){
        int row=grid.length;
        int col=grid[0].length;
        if(i<0 || i>=row|| j<0 || j>=col || vis[i][j] || grid[i][j]==0){
            return 0;
        }
        vis[i][j]=true;
        return 1+dfs(grid,vis,i,j+1)+dfs(grid,vis,i,j-1)+dfs(grid,vis,i+1,j)+dfs(grid,vis,i-1,j);

    }




}