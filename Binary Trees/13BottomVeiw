
class Solution {
    class Pair{
        Node node;
        int hd;
        Pair(Node node,int hd){
            this.node=node;
            this.hd=hd;
        }
        
    }
    public ArrayList<Integer> bottomView(Node root) {
        ArrayList<Integer> ans = new ArrayList<>();
        if(root==null) return ans;
        Map<Integer,Integer>mpp= new TreeMap<>();
        Queue<Pair>q= new LinkedList<>();
        q.offer(new Pair(root,0));
        while(!q.isEmpty()){
            Pair p =q.poll();
            Node n = p.node;
            int hd=p.hd;
            mpp.put(hd,n.data);
            if(n.left!=null) {
                q.add(new Pair(n.left,hd-1));
            }
            if(n.right!=null) {
                q.add(new Pair(n.right,hd+1));
            }
            
            
        }
        
        for(Integer i : mpp.values()){
            ans.add(i);
        }
        return ans;
        
    }
}