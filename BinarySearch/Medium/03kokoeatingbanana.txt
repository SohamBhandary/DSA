class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int l = 1;
        int r = getMax(piles); 

        while (l < r) {
            int mid = (l + r) / 2;
            int time = getHours(piles, mid);

            if (time > h) {
                l = mid + 1;
            } else {
                r = mid;
            }
        }
        return l;
    }

    private int getMax(int[] piles) {
        int max = Integer.MIN_VALUE;
        for (int pile : piles) {
            max = Math.max(max, pile);
        }
        return max;
    }

    private int getHours(int[] piles, int speed) {
        int hours = 0;
        for (int pile : piles) {
            hours += (int) Math.ceil((double) pile / speed);  
        }
        return hours;
    }
}
