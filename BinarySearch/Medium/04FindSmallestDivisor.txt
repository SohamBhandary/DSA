class Solution {

    public int sumofD(int [] nums,int threshold){
        int n=nums.length;
        int sum=0;
        for(int i =0;i<n;i++){
            sum+=Math.ceil(((double)nums[i]/threshold));
        }
        return sum;
    }
    public int smallestDivisor(int[] nums, int threshold) {
        int n= nums.length;
        if(n>threshold) return -1;
       int maxi = nums[0];
        for (int i = 1; i < n; i++) {
            maxi = Math.max(maxi, nums[i]);
        }
        int low=1;int high=maxi;
        while(low<high){
            int mid=(low+high)/2;
            if(sumofD(nums,mid)<=threshold){
                high=mid;
            }
            else{
                low=mid+1;
            }
        }
        return low;
        
    }
}