class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        if(k==nums.length) return nums;
        Map<Integer,Integer>mp = new HashMap<>();
        for(int n:nums){
            mp.put(n,mp.getOrDefault(n,0)+1);
        }
        PriorityQueue<Integer>heap= new PriorityQueue<>((a,b)->mp.get(a)-mp.get(b));
        for(int n:mp.keySet()){
            heap.add(n);
            if(heap.size()>k){
                heap.poll();
            }
        }
        int []ans = new int[k];
        for(int i =0;i<k;i++){
            ans[i]=heap.poll();
        }
        return ans;

        
    }
}